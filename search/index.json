[{"content":"서론 🌐 React에 대해서 정확히 설명할 수 없었던 나이기에 React를 사용했던 경험을 떠올려 다시한번 복습을 하고 정확한 React를 알기 위해 정리를 해보겠습니다.\nReact란? React는 웹 프레임워크로 자바스크립트 라이브러리의 하나로서 특히 SPA(Single Page Application)을 위한 사용자 인터페이스를 구축하는데 사용됩니다.\n즉, 현재 많이 활용되고 있는, 웹/앱의 View를 개발할 수 있는 인기 라이브러리죠\nSPA(Single Page Application) 단일 페이지 어플리케이션\n즉, 어떠한 웹 사이트의 전체 페이지를 하나의 페이지에 담아 동적으로 화면을 변경해 표시하는 기술\n더 자세한 내용은 아래 링크에서 확인\nJONGMINFIRE.DEV님의 \u0026ldquo;SPA(Single Page Application)란?\u0026rdquo;\nReact의 필요성 사실은 React를 사용하지 않아도, html과 css, javasciprt를 이용해서 웹 페이지를 만들 수 있지만, react를 이용하면 사용자와 상호작용할 수 있는 동적인 UI를 쉽게 만들 수 있습니다.\nSPA을 만들 때 좋습니다. 모바일 앱처럼 전체화면 새로고침 없이 부드럽게 만들고 싶을 때 사용합니다.\n재사용이 편리합니다. html을 함수, array, object 이런 곳에 보관하고 재사용할 수 있어서 큰 프로젝트 일 수록 html 관리가 편리해집니다. 또, ReactNative를 쓰면 같은 리액트 문법으로 모바일 앱개발도 가능합니다.\nReact 특징 JSX React에서는 템플릿에 일반 JavaScript를 사용하는 대신 JSX를 사용합니다. JSX는 HTML 인용을 허용하고 이러한 HTML 태그 구문을 사용하여 하위 구성 요소를 렌더링하는 간단한 JavaScript입니다.\nData Flow(Flux) React는 데이터의 흐름이 한 방향으로만 흐르는 단방향 데이터 흐름(Flux)을 가집니다.\nAngular.js와 같은 양방향 데이터 바인딩은 규모가 커질수록 데이터의 흐름을 추적하기가 힘들고 복잡해지는 경향이 있어, 복잡한 앱에서도 데이터 흐름에서 일어나는 변화를 보다 예측가능할 수 있도록 단방향 흐름을 가지도록 했다고 합니다.\nComponent 기반 구조 Component는 독립적인 단위의 소프트웨어 모듈을 말합니다. 즉, 소프트웨어를 독립적인 하나의 부품으로 만드는 방법이라고 볼 수 있습니다.\nReact는 UI(View)를 여러 컴포넌트로 쪼개서 만듭니다. 한 페이지 내에서도 여러 각 부분을 독립된 컴포넌트로 만들고, 이 컴포넌트를 조립해 화면을 구성합니다.\n컴포넌트 단위로 쪼개져있기 때문에, 전체 코드를 파악하기 상대적으로 쉽습니다. 이렇게 기능 단위, UI 단위로 캡슐화시켜 코드를 관리하기 때문에 재사용성이 높습니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class App extends Component { render() { return ( \u0026lt;Layout\u0026gt; \u0026lt;Header /\u0026gt; \u0026lt;Navigation /\u0026gt; \u0026lt;Content\u0026gt; \u0026lt;Sidebar\u0026gt;\u0026lt;/Sidebar\u0026gt; \u0026lt;Router /\u0026gt; \u0026lt;/Content\u0026gt; \u0026lt;Footer\u0026gt;\u0026lt;/Footer\u0026gt; \u0026lt;/Layout\u0026gt; ); } } Virtual DOM (Document Object Model) 원래, DOM은 html, xml, css 등을 트리 구조로 인식하고, 데이터를 객체로 간주하고 관리합니다.\n하지만, 페이지를 수정할 때 마다 DOM 트리를 계속 새로 그려줘야하고 수정할 데이터를 DOM에서 모두 찾아서 수정해야하기 때문에 성능과 비용적인 측면에서 손실이 큽니다.\n그래서 React에서는 DOM Tree 구조와 같은 구조체 Virtual DOM이라는 가상의 문서 객체 모델을 만들어 이벤트가 발생할 때 마다 Vitrual DOM을 만들고 다시 그릴 때마다 실제 DOM과 비교하고 전/후 상태를 비교해, 변경이 필요한 최소한의 변경사항만 실제 DOM에 반영해, 앱의 효율성과 속도를 개선할 수 있습니다.\nProps \u0026amp; State Props\nprops는 부모 컴포넌트에서 자식 컴포넌트로 전달해주는 데이터를 말합니다 쉽게 읽기 전용 데이터라고 생각하면 될 것 같습니다. 자식 컴포넌트에서 전달받은 Props는 변경이 불가능하고 props를 전달해준 최상위 부모 컴포넌트만 props를 변경할 수 있습니다.\nState\nState는 컴포넌트 내부에서 선언하며 내부에서 값을 변경할 수 있습니다. state는 동적인 데이터를 다룰 때 사용하며, 사용자와의 상호작용을 통해 데이터를 동적으로 변경할 때 사용합니다. 다만, state를 바꿀 때에는 [state, setState] = useState(value)형식에서 setState()라는 함수로 변경해야합니다.\nReact 장단점 React의 장점 빠른 업데이트와 렌더링 속도\n위에서 말했듯, React는 빠른 업데이트를 위해 Virtual DOM이라는 것을 사용하여 어떤 DOM 상태의 변경이 일어나야한다면 Vitrual DOM에서는 변경해야 할 최소한의 부분을 검색(Compute Diff)하여 검색한 부분만을 업데이트하고 렌더링하기 때문에 렌더링 속도가 상대적으로 빨라진다.\n재사용성\n리액트는 모든 페이지가 컴포넌트로 구성되어져있고 하나의 컴포넌트는 다른 여러 개의 컴포넌트로 구성되어 질 수 있습니다. 마치 레고 블록을 조립하듯 컴포넌트들을 조립해서 개발할 수 있다는 것입니다.\n활발할 지식공유 및 커뮤니티\n구글링만 해도 잘 나온다.\nReact Native\n리액트 문법을 사용해서 모바일 환경도 개발할 수 있다는 장점이 있다.\nReact의 단점 IE8 이하 버전은 지원하지 않는다.\nView 이외의 기능은 직접구현하거나 라이브러리를 사용해서 구현해야하기에 javascript 배경지식이 필수 선생이다.\n데이터 모델링, 라우팅, Ajax 등 기능 지원이 안된다.\n앱의 규모가 커지면 속도가 느려진다.\n높은 상태관리 복잡도\n","date":"2023-06-04T00:00:00Z","image":"https://myeongcode.github.io/p/react-react%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A0%95%EB%A6%AC/react-logo_hua3ebe5898a4e39adc84559693d29cf1f_231564_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/react-react%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A0%95%EB%A6%AC/","title":"[React] React에 대한 정리"},{"content":"JIRA란? 프로젝트에서 애자일 방법론을 적용할 때의 프로젝트 관리 협업 툴\n가장 기본이 되는 단위 : 이슈(Issue) ⇒ 이슈란 팀이 식별하고 있는 작업 항목의 단위로서, 하나의 업무 당 하나의 이슈가 배정됩니다.\n이슈를 등록하고 관리하는 과정에서 우리는 업무계획을 수립할 수 있고, 업무 사이클에 맞게 내게 주어진 일을 진행하고 완료할 수 있습니다.\n지라의 이슈에는 다양한 타입이 있습니다.\n에픽(Epic) : 정해진 업무에 따라 다른 이슈를 포함한 조금 더 큰 범주의 이슈 스토리(Story) : 사용자의 요구사항을 담은 스토리 태스크(Task) 버그(Bug) 등등 이슈를 만드는 방법은 지라 상단 메뉴바에서 만들기(Create) 버튼을 클릭하면 이슈를 생성할 수 있습니다.\n이 때, 각 이슈별로 이슈 key(프로젝트키-이슈숫자형식)가 자동으로 생성되는데 이 키를 구성원들과 공유하여 어떤 이슈에 대해 이야기를 하는지 싱크를 맞출 수 있습니다.\n각 이슈의 내용을 뜻하는 필드(Field)를 잘 구성하고 작성해야 업무에 있어 꼭 필요한 정보를 기록으로 남기고, 구성원 간에 오해없이 같은 내용을 공유할 수 있습니다.\n이슈에는 다양할 필드가 존재하는데, 지라를 활용할 때 가장 필수적인 필드 항목 세 가지만 꼽자면\n요약 : 이슈의 제목 해당 업무를 가장 잘 정리한 문장 혹은 문구를 작성해야, 전체 업무를 파악할 때 어려움이 없습니다. 담당자 : 해당 업무를 진행할 담당자 지라에서는 한 이슈 당 하나의 담당자만 할당할 수 있는데 이는 R\u0026amp;R(Role and Responsibilities : 업무분장)을 명확하게 하고 누가 어떤 업무를 진행하는지 알 수 있는 가시성을 확보 담당자가 여러 명일 경우에는 하위작업(Sub Task)를 활용하거나, 관련자(Stakeholder)필드를 구성하면 됩니다. 우선순위 : 업무의 긴급성과 중요성 High / Medium / Low 등으로 나누어 중요하고 긴급한 업무와 그렇지 않은 업무를 구분할 수 있습니다. 💡 업무 히스토리 추적을 위해 필드별로 업데이트 되는 이벤트 내역이 생길때마다 코멘트를 남기는 것을 추천합니다. 또, 이슈 삭제 권한을 일반 유저에게 주지 않는 것이 좋습니다. 커뮤니케이션이 잘 되고, 신뢰와 협업을 기반으로 일을 한다면 이슈를 삭제할 이유가 없습니다.\n업무 시각화 공간 : 프로젝트(Project) ⇒ 지라에서 가장 기본이 되는 단위가 이슈라면, **연관된 이슈들의 집합이 바로 프로젝트(Project)**입니다.\n하나의 이슈는 단 하나의 프로젝트에만 소속하기 때문에, 프로젝트는 각 팀이 진행해야 하는 할 일 리스트하고도 볼 수 있습니다.\n지라 프로젝트 칸반 보드 지라 프로젝트 스크럼 보드 지라 프로젝트 로드맵 알아야 할 중요한 JIRA 핵심 용어 백로그 : 우선순위를 정해야하는 집중 작업 목록 스토리 포인트 : 노력, 복잡성 및 위험에 대한 0-8 척도에 의존 스크럼 보드 : 클라이언트 중심의 모든 프로젝트에 사용되며, 일반적으로 할 일, 진행 중, 완료된 컬럼과 같은 주요 요소로 구성됩니다. 칸반 보드 : 주로 제품과 관련된 업무에 사용 레이블 : 레이블은 모든 문제를 분류하는 데 필요합니다. 또한 문제를 빠르게 찾는데 도움이 됩니다. 워크플로 : 워크플로는 보드 열 사이에서 스토리를 이동합니다. 스토리 : 사용자 스토리에는 요청에 필요한 모든 것이 포함됩니다. 작업 로그 : 수행된 모든 작업의 목록을 포함합니다. 디시젼 로그 : 내린 모든 결정의 목록을 포함합니다. 에픽 : 작업의 큰 덩어리를 더 작고 더 쉬운 단계로 나눕니다. 위험 로그 : 프로젝트 작업 수행 중 식별된 위험 목록 기술적 작업 : 프로젝트의 작은 작업 JIRA의 장점 워크플로 가시성 향상 프로세스를 자동화하고 실시간으로 진행 상황을 추적하여 워크플로에 대한 더 나은 가시성을 제공 시간 추적 각 작업에 소요된 시간을 자동으로 기록하며, 프로세스를 최적화하고 효율성을 개선하며 리소스를 더 잘 활용하는 데 사용 생산성 향상 유연한 문제 추적 시스템을 통해 작업을 보다 효율적으로 추적 및 관리 JIRA의 단점 초보자가 쓰기에는 복잡함 초보자가 사용할 때의 UI가 직관적이지 않음 커뮤니케이션의 부재 프로젝트 관리를 위한 훌룡한 도구이지만 커뮤니케이션 기능이 부족함 Reference 일 잘하는 팀의 실전 ‘지라(Jira)’ 활용법 - 업무용 협업툴 JANDI 블로그\n","date":"2023-06-03T00:00:00Z","image":"https://myeongcode.github.io/p/jira-jira%EA%B0%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C/jira-logo_hu5a45f1008d9b0d027dd43621df4b7488_246608_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/jira-jira%EA%B0%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C/","title":"[JIRA] JIRA가 무엇일까?"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* [programmers / 문자열 반복 출력하기] my_string\tn\tresult \u0026#34;hello\u0026#34;\t3\t\u0026#34;hhheeellllllooo\u0026#34; */ function solution(my_string, n) { var splitString = my_string.split(\u0026#34;\u0026#34;); let answer = \u0026#34;\u0026#34;; for (let i = 0; i \u0026lt; my_string.length; i++) { for (let j = 0; j \u0026lt; n; j++) { answer += splitString[i]; } } return answer; } 그냥 문자열 개수만큼 반복하였고, 또 매개변수로 받은 n만큼 반복하여 각 문자마다 3번씩 반복하게 만들었다.\n완료 ✅\n","date":"2023-05-12T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EB%AC%B8%EC%9E%90-%EB%B0%98%EB%B3%B5-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EB%AC%B8%EC%9E%90-%EB%B0%98%EB%B3%B5-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/","title":"[Programmers] 문자 반복 출력하기"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /* [programmers / 직각삼각형 출력하기] 입력 #1 3 출력 #1 * ** *** */ const readline = require(\u0026#34;readline\u0026#34;); const rl = readline.createInterface({ input: process.stdin, output: process.stdout, }); let input = []; rl.on(\u0026#34;line\u0026#34;, function (line) { input = line.split(\u0026#34; \u0026#34;); }).on(\u0026#34;close\u0026#34;, function () { for (let i = 0; i \u0026lt; Number(input); i++) { console.log(\u0026#34;*\u0026#34;.repeat(i + 1)); } }); readline을 처음보고 벙쪘다.. 이게 무슨 코드인지 몰라서..\nreadline이란? Readable Stream에서 한 번에 한 줄씩 데이터를 읽기 위한 인터페이스를 제공하는 모듈\n즉, 입출력을 처리하게해주는 JS 내장 모듈입니다.\nreadline 사용법 모듈 불러오기 1 const readline = require(\u0026#34;readline\u0026#34;); interface 객체 만들기 interface 객체를 이용하여 콘솔에서 표준 입출력 처리를 할 수 있습니다.\n1 2 3 4 const rl = readline.createInterface({ input: process.stdin, output: process.stdout, }); stdin : standard input stdout : standard output 입출력 코드 작성하기 1 2 3 4 5 6 7 8 9 rl.on(\u0026#34;line\u0026#34;, (line) =\u0026gt; { // 입력 받은 값을 처리하는 코드 rl.close(); }); rl.on(\u0026#34;close\u0026#34;, () =\u0026gt; { // 입력이 끝나고 실행하는 코드 process.exit(); }); on() : 메서드를 활영하여 이벤트와 콜백함수를 전달 'line' : 입력받은 값을 한 줄씩 읽어 문자열 타입으로 전달하는 역학을 하는 이벤트. rl.close() : 인터페이스를 종료. 무한히 입력 받는 것을 방지하며, close를 작성하여 입력이 끝난 후 실행되어야 할 함수를 작성합니다. 아무튼 readline은 아래에 조금 더 내용을 참조하였고, 우리는 3을 입력받았으므로 직각삼각형 모양으로 별을 출력해줘야한다.\n그러기위해서는 반복되어야하는 for문을 사용했고, 출력될 때 repeat()를 사용하여 for문을 반복한 만큼 *을 찍게했다.\n근데 여기서 별이 처음부터 찍혀야하니 repeat(i+1)을 해주었다.\n완료 ✅\n","date":"2023-05-12T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EC%A7%81%EA%B0%81%EC%82%BC%EA%B0%81%ED%98%95-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EC%A7%81%EA%B0%81%EC%82%BC%EA%B0%81%ED%98%95-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/","title":"[Programmers] 직각삼각형 출력하기"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* [programmers / 문자열 뒤집기] my_string\treturn \u0026#34;jaron\u0026#34;\t\u0026#34;noraj\u0026#34; \u0026#34;bread\u0026#34;\t\u0026#34;daerb\u0026#34; */ function reverseString(string) { let splitString = string.split(\u0026#34;\u0026#34;); let reverseString = splitString.reverse(); let joinArray = reverseString.join(\u0026#34;\u0026#34;); return joinArray; } function solution(my_string) { var answer = reverseString(my_string); return answer; } reverseString이라는 문자열을 뒤집어주는 함수를 하나 만들고\n문자열 분해 .split(\u0026quot;\u0026quot;) ➡️ 문자열 뒤집기 .reverse() ➡️ 문자열 합체 .join(\u0026quot;\u0026quot;) 순으로 진행을 해주었다.\n완료 ✅\n","date":"2023-05-02T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%92%A4%EC%A7%91%EA%B8%B0/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%92%A4%EC%A7%91%EA%B8%B0/","title":"[Programmers] 문자열 뒤집기"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 /* [programmers / 짝수 홀수 개수] num_list\tresult [1, 2, 3, 4, 5]\t[2, 3] [1, 3, 5, 7]\t[0, 4] */ function discrimination(num_list) { let odd = 0, even = 0; for (let i = 0; i \u0026lt; num_list.length; i++) { if (num_list[i] % 2 == 0) { even++; } else { odd++; } } return [even, odd]; } function solution(num_list) { let answer = discrimination(num_list); return answer; } 짝수인지 홀수인지 판별하는 함수 discrimination을 만들고 return을 [짝수, 홀수]로 반환해줬다.\n짝수인지 아닌지는 2를 나눠서 나머지가 0이면 짝수인거니까 even을 1씩 증가시키고, 2를 나눠서 0이 아니면 홀수이므로 odd를 1씩 증가시켜줬다.\n완료 ✅\n","date":"2023-05-02T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EC%A7%9D%EC%88%98-%ED%99%80%EC%88%98-%EA%B0%9C%EC%88%98/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EC%A7%9D%EC%88%98-%ED%99%80%EC%88%98-%EA%B0%9C%EC%88%98/","title":"[Programmers] 짝수 홀수 개수"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /* [programmers / 아이스 아메리카노] age\tresult 40\t1983 23\t2000 */ function solution(age) { let default_year = 2022; let born; born = default_year - age + 1; return born; } 2022년에 살고있었다면 getFullYear()를 사용했을텐데, 현재는 2023년이라서 그냥 2022년을 디폴트년도로 잡았다.\n완료 ✅\n","date":"2023-04-30T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EB%82%98%EC%9D%B4-%EC%B6%9C%EB%A0%A5/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EB%82%98%EC%9D%B4-%EC%B6%9C%EB%A0%A5/","title":"[Programmers] 나이 출력"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 /* [programmers / 배열 뒤집기] num_list\tresult [1, 2, 3, 4, 5]\t[5, 4, 3, 2, 1] [1, 1, 1, 1, 1, 2]\t[2, 1, 1, 1, 1, 1] [1, 0, 1, 1, 1, 3, 5]\t[5, 3, 1, 1, 1, 0, 1] */ function solution(num_list) { var answer = num_list.reverse(); return answer; } js에서 제공하는 메서드인 .reverse()만 사용하면 쉽다.\n완료 ✅\n","date":"2023-04-30T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EB%B0%B0%EC%97%B4-%EB%92%A4%EC%A7%91%EA%B8%B0/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EB%B0%B0%EC%97%B4-%EB%92%A4%EC%A7%91%EA%B8%B0/","title":"[Programmers] 배열 뒤집기"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* [programmers / 아이스 아메리카노] money\tresult 5,500\t[1, 0] 15,000 [2, 4000] */ function solution(money) { let americano = 5500; let americano_cnt, remain_money; americano_cnt = parseInt(money / americano); remain_money = parseInt(money % americano); return [americano_cnt, remain_money]; } 쉽게 몫과 나머지를 구하면 아메리카노의 잔 수와 잔돈을 알 수 있다. 정수로 return해줘야하므로 parseInt() 사용\n완료 ✅\n","date":"2023-04-28T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EC%95%84%EC%9D%B4%EC%8A%A4-%EC%95%84%EB%A9%94%EB%A6%AC%EC%B9%B4%EB%85%B8/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EC%95%84%EC%9D%B4%EC%8A%A4-%EC%95%84%EB%A9%94%EB%A6%AC%EC%B9%B4%EB%85%B8/","title":"[Programmers] 아이스 아메리카노"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /* [programmers / 옷가게 할인받기] 입출력 예 price\tresult 150,000\t142,500 580,000\t464,000 */ function solution(price) { let result; if (price \u0026gt;= 500000) result = price - price * 0.2; else if (price \u0026gt;= 300000) result = price - price * 0.1; else if (price \u0026gt;= 100000) result = price - price * 0.05; else result = price; return result; } 먼저 걸려야하는 50만원 \u0026gt; 30만원 \u0026gt; 10만원 순으로 if 조건문을 걸어주어 계산을 진행하였음.\n음?\u0026hellip; 뭐지 뭐가 문제일까\u0026hellip;.?\n아 잘보니까 제안사항에 소수점 이하를 버린 정수를 return합니다. 라고 적혀있었음.\n그래서 테스트 중에 소수점으로 나오는 것들이 있어 실패를 한 것 같다.\n그래서 return할 때 정수로 반환해주기 위해 parseInt()를 덧붙였다.\n완료 ✅\n","date":"2023-04-28T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EC%98%B7%EA%B0%80%EA%B2%8C-%ED%95%A0%EC%9D%B8-%EB%B0%9B%EA%B8%B0/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EC%98%B7%EA%B0%80%EA%B2%8C-%ED%95%A0%EC%9D%B8-%EB%B0%9B%EA%B8%B0/","title":"[Programmers] 옷가게 할인 받기"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /* [programmers / 배열의 평균값] 입출력 예 numbers\tresult [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\t5.5 [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]\t94.0 */ function solution(numbers) { let sum = 0; let answer; for (let i = 0; i \u0026lt; numbers.length; i++) { sum += numbers[i]; } answer = (sum / numbers.length).toFixed(1); return answer; } 배열의 개수만큼 다 더한 값을 배열의 개수로 나뉘면 쉽게 평균값을 구할 수 있다.\n근데 문제에서 .0또는 .5인 경우만 정답으로 처리된다는 것 같길래 .toFixed(1)로 소수점 아래 1자리까지 표기해주었음.\n완료 ✅\n","date":"2023-04-25T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EB%B0%B0%EC%97%B4%EC%9D%98-%ED%8F%89%EA%B7%A0%EA%B0%92/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EB%B0%B0%EC%97%B4%EC%9D%98-%ED%8F%89%EA%B7%A0%EA%B0%92/","title":"[Programmers] 배열의 평균값"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* [programmers / 피자 나눠먹기 - 3] 입출력 예 slice\tn\tresult 7\t10\t2 4\t12\t3 */ function solution(slice, n) { let defaultSlice = slice; let person = n; const pizza = Math.ceil(person / defaultSlice); return pizza; } 피자 나눠먹기 - 1 처럼 기본적으로 피자 1개에 slice조각으로 나뉘어주는데 피자조각보다 먹어야하는 사람이 더 많을경우 소수점으로 나오므로 올림을 하여 피자의 개수를 늘리도록 함.\n완료 ✅\n","date":"2023-04-25T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%ED%94%BC%EC%9E%90-%EB%82%98%EB%88%A0%EB%A8%B9%EA%B8%B0-3/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%ED%94%BC%EC%9E%90-%EB%82%98%EB%88%A0%EB%A8%B9%EA%B8%B0-3/","title":"[Programmers] 피자 나눠먹기 - 3"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /* [programmers / 피자 나눠먹기 - 1] 입출력 예 n\tresult 7\t1 1\t1 15\t3 */ function solution(n) { let defaultSlice = 7; let person = n; const result = Math.ceil(person / defaultSlice); return result; } 기본적으로 피자 1개에 7조각으로 나뉘어주는데 피자조각보다 먹어야하는 사람이 더 많을경우 소수점으로 나오므로 올림을 하여 피자의 개수를 늘리도록 함.\n완료 ✅\n","date":"2023-04-24T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%ED%94%BC%EC%9E%90-%EB%82%98%EB%88%A0%EB%A8%B9%EA%B8%B0-1/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%ED%94%BC%EC%9E%90-%EB%82%98%EB%88%A0%EB%A8%B9%EA%B8%B0-1/","title":"[Programmers] 피자 나눠먹기 - 1"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 /* [programmers / 피자 나눠먹기 - 2] 입출력 예 n\tresult 6\t1 10\t5 4\t2 */ function gcd(a, b) { let result; while (b != 0) { result = a % b; a = b; b = result; } return a; } function solution(n) { let defaultSlice = 6; let person = n; let lcm; if (person \u0026lt; defaultSlice) { lcm = (person * defaultSlice) / gcd(defaultSlice, person); return lcm / 6; } else { lcm = (person * defaultSlice) / gcd(person, defaultSlice); return lcm / 6; } } 이 문제는 보자마자 최소공배수를 구하면 되겠구나 하는 생각이 먼저들었음.\n그래서 최소 공배수를 구하기 위해 먼저 최대공약수를 구하기 위해 gcd(a, b)를 만들어서 그 결과를 return했고, 최소공배수 = 두 수의 곱 / 최대공약수이므로 그 값을 피자 조각인 6으로 나누어 피자의 개수를 return하였다.\n사실 최소공배수를 어떻게 구하지 막막했는데 \u0026lsquo;최소공배수를 구하는 법\u0026rsquo;을 치니까 유클리드 호제법이라는 것이 언급되었다.\n유클리드 호제법 유클리드 호제법은 2개의 자연수의 최대공약수를 구하는 알고리즘의 하나이고, 두 수가 서로 상대방 수를 나누어서 결국 원하는 수를 얻는 알고리즘이다.\n2개의 자연수 a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a \u0026gt; b), a와 b의 최대 공약수는 b와 r의 최대공약수와 같다.\n좀, 말이 어려울 수도 있는데 간단히 말하자면\na를 b로 나눈 나머지를 r이라 했고, 또 b를 r로 나눈 나눈 나머지를 r\u0026rsquo;이라 하고, 또 r을 r\u0026rsquo;로 나눈 나머지를 r\u0026rsquo;\u0026rsquo; 이런식으로 과정을 반복해서 나머지가 0이 되었을 때 마지막으로 나누는 수가 최대공약수가 되는 것이다.\n계산 예 만약 a가 24, b가 18이라고 해보자\nGCD a b a % b 1회 GCD(24, 18) 24 18 6 2회 GCD(18, 6) 18 6 0 2번째 시도만에 나머지가 0으로 떨어졌으며, 결국 마지막에 나누는 수(6)이 최대공약수가 되는 것이다.\n그래서 이것을 코드로 작성한 것이 gcd(a, b)에 해당이 되는 것이고, 최대공약수를 알면 최소공배수는 바로 구할 수 있다.\n최소공배수 = 두 수의 곱 / 최대공약수\n그리고 마지막으로 피자의 조각이 아닌 피자의 개수를 구하는 것이므로 6조각 당 1개이므로 6으로 나눈 몫을 return하여 피자의 개수를 구하였다.\n완료 ✅\n","date":"2023-04-24T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%ED%94%BC%EC%9E%90-%EB%82%98%EB%88%A0%EB%A8%B9%EA%B8%B0-2/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%ED%94%BC%EC%9E%90-%EB%82%98%EB%88%A0%EB%A8%B9%EA%B8%B0-2/","title":"[Programmers] 피자 나눠먹기 - 2"},{"content":"오늘은 어머니 동창회가 있는 날! 경기도 의왕에서 동창회를 한다길래 나랑 아버지는 따라가서 어머니 동창회 끝난 후에 같이 놀러다니기로 했다!\n그래서 아침 8시에 일어나서 주섬주섬 준비하기 시작함.. (전날 비염이 심해져서 잠을 제대로 못자고 7시에 겨우자서 1시간 잠\u0026hellip;. 🤧)\n원래 의왕갈 때 운전은 내가 할라그랬는데 위의 이슈로 피곤에 쩌들어서 뒷자석에서 졸면서감ㅎㅋ\n어쨋든 잘 도착해서 어머니는 동창회가 있는 장소에 떨궈주고 우리는 거기 근처 롯데 프리미엄 아울렛을 가서 아버지랑 같이 밥을 먹기로함!!\n롯데 프리미엄 아울렛 입성 보이쥬? 저어어어기에 롯데 프리미엄 아울렛이 뙇!\n본 원주 촌놈은 롯데 프리미엄 아울렛을 처음가봄\n들어서자마자 역시\u0026hellip; 아울렛은 이런 곳인가? 라는 생각을 하게됨\n오\u0026hellip;. 아니 아울렛이 뭐가 이리 좋음? 여기서 하루종일 놀아도 될 듯ㅋ\n여기는 Tasty Ground라는 곳을 가기 전에 야외에 이런 건물들이 있는데 여기 안에 들어가면 다 지하실로 이어져있고 그 지하실이 엄청 큰 푸드코트라는거\n아기들과 함께 놀러온 부부가 되게 많았고 연인사이에도 되게 많이 오신 것 같다.\n중앙 정원에는 무슨 네파(NEPA)에서 진행하는 행사? 같은게 많이 있었고 거기에 다 줄서서 행사에 참여하고 있었음. 아 이게 진정한 사람구경이지 ㅋ\n어쨋든, 우리는 밥을 먹기위해 여길 지나서 Tasty Ground라는 곳으로 향했음.\n^오^\u0026hellip; 사실 앞에 푸드코트가 더 많은데 사진을 찍질 못했다.. 구경하느라 바빠서 ㅎㅋ\n뭐먹을지 여기저기 구경하다가 아버지랑 나는 스시를 좋아하기 때문에 스시덴고쿠라는 곳에서 밥을 먹었다.\n진짜 개맛있음.. 연어두께도 두툼하고 초밥 위에 올라가있던 회들이 다 싱싱했고 식감도 뛰어났다. 내가 원주에서 먹었던 스시와는 차원이 다ㄹ\n아무튼, 아버지랑 완전 맛있다고 감탄을 하면서 먹었더니 접시는 어느새 16~17접시 정도 먹었을 듯..?\n계산대에 서니 11만 2천\u0026hellip;..음.. 뭐지 생각보다 많이 먹진 않았는데..?\n아버지 캐리로 스시를 맛있게 얻어먹고 아울렛 안에 오우야(ouya) 커피\u0026hellip;?를 갔다.\n그 옆에 젤라또도 같이 파는 것 같았는데 너무 먹고싶었지만, 우리는 상남자마냥 오우야커피에서 커피만 사들고 다시 아까 정원으로 향했다.\n하도 앉을 곳이 없어서 커피를 들고 정원쪽에서 계속 빙글빙글 돌았다.\n그냥 분수대 뒤에있던 돌담 위에 앉고 사람들도 구경하고 경치도 구경하고 따스한 햇살을 받으며 그동안 받지 못했던 광합성을 하고 있었다.\n근처 건물들 사진도 간간히 찍었다.\n사람들이 모두 여유로워보였다.. 나는 항상 바쁘게 살아야 하는 습관이 있어서 저렇게 여유롭게 즐기고 있는 사람들의 모습이 부러웠다.\n아버지한테도 이 얘기를 했다. \u0026ldquo;사람들이 되게 여유로워 보이네\u0026rdquo;\n그러자 아버지는 나에게 \u0026ldquo;물론 경제적으로 여유가 있다는 것도 중요하지만, 여유롭다는 마음가짐을 가지는 것이 먼저가 되어야 해\u0026rdquo; 라고 말해줬다.\n맞다. 항상 나는 미래의 걱정을 너무 많이 해서 지금 당장 뭐라도 하지 않으면 내 미래는 막막할거야!! 라는 생각을 가진 방식으로 생활들을 해왔다. 그래서, 어떤 무엇이든 해놓으면 미래에는 도움이 되지 않을까 해서 이것도 해보고 저것도 해보고 이거 끝나면 저거하고\u0026hellip; 걱정이 앞서서 내가 나를 바쁘게 만든 것 같다.\n아버지의 말을 듣고 나니까 오늘만큼은 그런 걱정을 잠시 내려두고 오늘의 나를 좀 더 아껴주고 즐길 때는 즐겨야겠다고 생각했다.\n근데, 아버지랑 이런저런 얘기를 하다보니 커피가 흘려져있다는 걸 알았다..\n언제 흘린거지? 생각했는데 아까 앉을 때 없어서 빙글빙글 돌았을 때 흘렸나봄\n아 ㅋㅋ 근데 발도 묻어있네 아 ㅋ\n아 근데 옷도 젖어있었음 총체적 난국이네.. 그래도 안에 입은 옷만 젖었고 겉에 옷은 안젖어서 가릴 수 있었음 ㅎㅋ 다행\n아무튼, 대화를 하던 중 어머니가 자기한테 오라고 연락이 왔다.\n그래서 우리는 곧장 어머니한테 가진않고 가기전에 아버지랑 사진 한 컷 찍기로 했다. 아버지랑 같이 찍은 사진은 생각해보니 얼마 없었던 것 같아서..\n그래서 지나가는 시민분께 촬영부탁을 드렸고 같이 찍은 사진을 얻을 수 있었다!!\n(안에 옷 흰색 쪽 보면 커피 묻어있음 😱)\n크킄 이렇게 보니 살 개쪘네.. 믿힌\n그리고 우리는 어머니가 있는 카페로 도착을 했는데, 아직 동창회가 끝나지 않았고 우리는 커피를 또 얻어먹게 된다.. (방금 전에 먹고왔는뎁..)\n어쨋든, 커피를 먹으면서 동창회 끝나는 것을 기다리고 있었다\n근데 여기 카페가 뷰가 맛집인게 앞에 백운호수가 너무 잘보였고, 오리배들이 둥둥 떠다니는게 귀여웠다.\n엌ㅋ 귀엽누\n여기 카페가 어디냐고? 안알랴줌ㅋ 알아서 찾으셈 (힌트는 흙과 나무)\n어느덧 어머니 동창회가 끝나구 다들 작별인사를 하고 갈려고 하던 중 내가 꽃가루때문에 재채기랑 콧물이 개오지게 나왔고 눈이 너무 간지러워서 눈을 하도 비벼댔더니 눈이 충혈되고\u0026hellip; 막 난리.\n근데 하필 오늘이 일요일이라 근처 약국들이 다 문을 닫은거.. 근데 롯데 아울렛에 약국이 있다더라 샹\n그래서 어머니랑 아버지랑 데리고 다시 롯데 프리미엄 아울렛으로 향했음 ㅋㅋ 아 너무 고통이여서 약을 안사고는 못베겼음\n너무 크다보니 한참을 헤메다 결국 약국을 찾았고 나는 얼른 알러지 약을 먹고 알러지 안약도 뿌렸다. 진짜 꽃가루\u0026hellip; 후.. 내가 참는다\n어머니는 아울렛을 못봤으니까 나랑 아버지가 봤던 곳을 다시 구경했다. 그리고 어머니가 빵을 먹자길래 여기를 향했다. artisan bakers 아티산 베이커스..?\n오ㅋ 빵천국\n우리는 빵을 2~3개 정도 사고, 차에 올라탔다. 어머니가 안양의 중앙시장을 가보고 싶다고 하시길래 안양까지 차를 운전해왔다. 그리고는 안양의 시내 어디엔가 차를 주차해두고 안양 중앙시장을 다녀왔다.\n음.. 그렇군\n1시간정도? 한번 둘러보고 우리는 수원에서 갈비를 먹기위해 차에서 맛집 탐색작전을 펼쳤다. 근데, 수원왕갈비 가격이 어마무시하더라..? 그래서 수원쪽으로는 못가고 대신 수원 서서갈비를 가기로함!\n경기도 용인 수지에 있는 수원 서서갈비\n들어서자마자 갈비 냄새 공격 쌉오졌고, 나도 갈비를 공격하러 왔다. 얼른 갈비를 내놓아라\n우리는 정통서서갈비 2인분이랑 순두부찌개 1개랑 비냉 1개를 시켰다.\n^오^\n아 개맛있었다.. 입에서 살살녹드라\u0026hellip;.\n그렇지\u0026hellip; 꼭 수원왕갈비가 유명하다고 거기가서 먹어야한다는 법칙은 없지. 춘천도 닭갈비가 유명하지만 사실 맛있는데가 없지 않ㄴ\n진짜 개맛있겠죠? 요즘 양이 줄어서 많이 먹지 못했다는게 가장 슬픔\n밥을 배불리 먹고 이제 원주로 돌아갈 준비 완료.\n가는데 1시간 30분 걸리더라\n나는 1시간 반동안 열심히 운전을 했고, 우리 부모님은 식곤증으로 인해 차에서 기절을 해버렸다. 오면서 약간 피곤하긴했는데 그래도 이제는 내가 운전하고 부모님을 편하게 모셔다드린다고 생각하면 뿌듯하고 기분이 좋다.\n부모님이 다른 지역을 간다고 하면 언제든지 내가 운전을 해서 갈 예정이다. (근데 3시간 이상거리는 좀ㅋㅋ)\n마무리 난 돌아와서 바로 이 글을 쓰고있고 오늘 너무 뿌듯하고 행복했던 하루였다.\n사실 의왕은 거의 올 일이 없기도 하고 원주도 잘 모르는 원주 촌놈이 다른 지역을 가서 놀 일이 있나싶다.. 어머니 동창회 덕분에 이런 지역도 가보고 하는거지!\n덕분에 가족들과 재밌는 추억도 쌓았고 또 사진을 남길 수 있어서 좋았다. 이제는 어디를 가게 된다면 꼭 사진으로 남겨놔야겠다는 생각이 들곤 한다. 우리가 나중에 웃으면서 \u0026ldquo;그때 여기 갔었지~\u0026rdquo; 할 수 있는 추억을 되돌아 볼 수 있는 기회가 있을 수도 있으니까\u0026hellip; 사진은 꼭 남겨놔야겠다.\n그리고 언제나 안전하게 귀가했다는 점에서 너무 감사하다. 사람일이 어떻게 될지 모르니까 운전하다가 운이 안좋으면 상대방으로 인해서 위협을 받을 수도 있는 상황이 발생할 수도 있는데 그런 일 없이 항상 안전하게 귀가를 할 수 있어서 참 다행이다.\n😆 어쨋든 오늘 즐거운 하루를 보냈다‼️ 😆\n4월 4째주 일요일의 일과 끝! 🙌🏻\n","date":"2023-04-23T00:00:00Z","image":"https://myeongcode.github.io/p/daily-4%EC%9B%94-4%EC%A7%B8%EC%A3%BC-sunday-%EF%B8%8F/4-4-thumb_hufe430c4728d24f04f48fefa50192b2c4_1716213_120x120_fill_q75_box_smart1.jpeg","permalink":"https://myeongcode.github.io/p/daily-4%EC%9B%94-4%EC%A7%B8%EC%A3%BC-sunday-%EF%B8%8F/","title":"[Daily] 4월 4째주 Sunday ☀️"},{"content":"Flutter 프로젝트 생성 먼저, Firebase와 연동할 Flutter프로젝트를 하나 생성해줍니다.\n프로젝트 이름은 firebase_login으로 설정해줬음\n그리고 프로젝트를 연 후 입력폼을 받을 스크린파일을 하나 만들어줍니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 (lib \u0026gt; screens \u0026gt; login_screen.dart) import \u0026#39;package:flutter/material.dart\u0026#39;; class LoginScreen extends StatefulWidget { const LoginScreen({super.key}); @override State\u0026lt;LoginScreen\u0026gt; createState() =\u0026gt; _LoginScreenState(); } class _LoginScreenState extends State\u0026lt;LoginScreen\u0026gt; { String userPassword = \u0026#39;\u0026#39;; String userEmail = \u0026#39;\u0026#39;; @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text(\u0026#39;LoginScreen\u0026#39;), ), body: GestureDetector( onTap: () { FocusScope.of(context).unfocus(); }, child: Center( child: Container( padding: const EdgeInsets.all(20), child: Column( children: [ TextFormField( keyboardType: TextInputType.emailAddress, key: const ValueKey(1), decoration: const InputDecoration( hintText: \u0026#39;email\u0026#39;, contentPadding: EdgeInsets.all(15), ), onSaved: (value) { userEmail = value!; }, onChanged: (value) { userEmail = value; }, ), const SizedBox( height: 20, ), TextFormField( keyboardType: TextInputType.number, key: const ValueKey(2), decoration: const InputDecoration( hintText: \u0026#39;password\u0026#39;, contentPadding: EdgeInsets.all(15), ), onSaved: (value) { userPassword = value!; }, onChanged: (value) { userPassword = value; }, ), const SizedBox( height: 20, ), Container( padding: const EdgeInsets.all(15), height: 90, width: 90, decoration: BoxDecoration( color: Colors.white, borderRadius: BorderRadius.circular(20), ), child: GestureDetector( onTap: () { print(userEmail); print(userPassword); }, child: Container( decoration: BoxDecoration( borderRadius: BorderRadius.circular(50), gradient: const LinearGradient( colors: [ Colors.orange, Colors.red, ], begin: Alignment.topLeft, end: Alignment.bottomRight, ), ), child: const Icon( Icons.arrow_forward, color: Colors.white, size: 28, ), ), ), ), ], ), ), ), ), ); } } 간단하게 입력폼으로 email과 password를 받아서 아래 버튼을 누르면 입력폼에 입력한 email과 password가 출력되게끔 만들었습니다.\n잘 나오쥬? ㅎㅎ\nFirebase 연동 Firebase페이지에 접속해서 로그인을 해줍니다.\nFirebase 프로젝트 생성 로그인을 하고나면 시작하기로 클릭하여 프로젝트 생성창으로 들어옵니다.\n위에서 프로젝트 추가를 누릅니다.\n프로젝트 이름은 가볍게 login으로 만들어주겠습니다.\n애널리틱스 사용 설정을 냅두고 다음으로 넘어갑니다.\n애널리틱스 위치를 대한민국으로 설정하고 프로젝트를 만듭니다.\n프로젝트가 다 만들어지고 계속버튼을 누르면 다음화면이 표시됩니다.\nAndroid 앱 등록 우리는 Android 기기를 연동할 것이므로 Android 아이콘표시를 누릅니다.\n그러면 위와같이 Android 앱에 Firebase 추가창이 나타납니다.\n여기서 Android 패키지 이름은 우리가 만든 Flutter 프로젝트 내의 android/app/build.gradle파일에서 확인하실 수 있습니다.\n1 2 3 4 5 6 7 8 9 (android \u0026gt; app \u0026gt; build.gradle) ... defaultConfig { ... applicationId \u0026#34;com.example.firebase_login\u0026#34; //이것이 android 패키지 이름 ... } ... com.example.firebase_login을 복사해서 android 추가하는 페이지에 붙여넣습니다.\n앱 닉네임은 정해도 좋지만, 우리는 그냥 기본값으로 쓰고 다음으로 넘어가보도록 하겠습니다.\n위처럼 나온 설명대로 google-services.json 파일을 android \u0026gt; app 폴더 내에 넣어놓고 다음을 눌러줍시다.\nandroid \u0026gt; build.gradle 파일에서 위와 같은 코드를 추가해줍니다. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 buildscript { ... repositories { google() mavenCentral() } dependencies { classpath \u0026#39;com.google.gms:google-services:4.3.15\u0026#39; ... } } allprojects { repositories { google() mavenCentral() } } android \u0026gt; app \u0026gt; build.gradle 파일에서 위와 같은 코드를 추가해줍니다. 프로젝트에서 plugin쪽은 아마 apply plugin: ~~이런 식으로 되어있을 것임 맞춰서 넣어주면 됩니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 (android \u0026gt; app \u0026gt; build.gradle) ... apply plugin: \u0026#39;com.android.application\u0026#39; apply plugin: \u0026#39;com.google.gms.google-services\u0026#39; ... ... dependencies { implementation platform(\u0026#39;com.google.firebase:firebase-bom:31.5.0\u0026#39;) implementation \u0026#39;com.google.firebase:firebase-analytics\u0026#39; ... } 모두 코드를 추가해주었다면 다음 버튼을 눌러줍니다.\n콘솔로 이동하면 다음과 같이 안드로이드 앱이 추가된 것을 확인할 수 있습니다.\nFlutter Package 설치 Flutter에서 Firebase를 사용하기 위해서는 3가지 Package를 다운받아야 합니다.\ncloud_firestore 클라우드 호스팅되는 noSQL 데이터베이스인 Cloud Firestore용 Flutter 플러그인은 Android 및 iOS에서 라이브 동기화 및 오프라인 지원을 제공\nfirebase_core 여러 Firebase 앱에 연결할 수 있는 Firebase Core용 Flutter 플러그인\nfirebase_auth Firebase Auth용 Flutter 플러그인은 암호, 전화 번호 및 Google, Facebook 및 Twitter와 같은 ID 공급자를 사용하여 Android 및 iOS 인증을 가능하게 함\n1 2 3 4 5 6 7 8 (pubspec.yaml) dependencies: flutter: sdk: flutter cloud_firestore: ^4.5.2 firebase_core: ^2.10.0 firebase_auth: ^4.4.2 Firebase 초기화 패키지를 모두 다운받고 Flutter프로젝트로 돌아옵니다.\n우리는 firebase_core라는 패키지를 설치하였는데, 플러터에서 firebase를 사용하기에 앞서 항상 초기화해주는 메서드인 Firebase.initalizeApp() 메서드를 호출해야합니다.\n그렇지 않으면 다음과 같은 에러가 발생하게 됩니다.\n이 코드는 main.dart에 넣어주도록 하겠습니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 (lib \u0026gt; main.dart) import \u0026#39;package:firebase_login/screens/login_screen.dart\u0026#39;; import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:firebase_core/firebase_core.dart\u0026#39;; void main() { WidgetsFlutterBinding.ensureInitialized(); //Flutter 코어 엔진 초기화 Firebase.initializeApp(); runApp(const MyApp()); } class MyApp extends StatelessWidget { const MyApp({super.key}); @override Widget build(BuildContext context) { return MaterialApp( debugShowCheckedModeBanner: false, title: \u0026#39;Flutter Demo\u0026#39;, theme: ThemeData( primarySwatch: Colors.blue, ), home: const LoginScreen(), ); } } Firebase.initializeApp() 메서드는 비동기 방식으로 작동하는 메서드입니다. 그래서 이 메서드는 플러터와 통신을 하고싶어하지만 플러터 최상위 메서드인 runApp() 메서드가 호출되기 전에는 Flutter 엔진이 초기화 되지 않아서 접근이 불가합니다.\n메인메소드 내부에서 Flutter 엔진과 관련된 비동기 메서드를 사용하려면 먼저 Flutter 코어 엔진을 초기화시켜줘야 하는데, 이 역할을 하는 메서드가 WidgetsFlutterBinding.ensureInitialized() 입니다.\n즉, Flutter에서 Firebase를 사용하려면 main메서드 내부에서 비동기 방식으로 WidgetsFlutterBinding.ensureInitialized() 을 호출하고 난 후 Firebase.initalizeApp() 을 호출해야합니다.\n그리고 또, 비동기 방식으로 바꿔줘야하므로 다음과 같이 수정하면 됩니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 (lib \u0026gt; main.dart) import \u0026#39;package:firebase_login/screens/login_screen.dart\u0026#39;; import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:firebase_core/firebase_core.dart\u0026#39;; void main() async { WidgetsFlutterBinding.ensureInitialized(); await Firebase.initializeApp(); runApp(const MyApp()); } class MyApp extends StatelessWidget { const MyApp({super.key}); @override Widget build(BuildContext context) { return MaterialApp( debugShowCheckedModeBanner: false, title: \u0026#39;Flutter Demo\u0026#39;, theme: ThemeData( primarySwatch: Colors.blue, ), home: const LoginScreen(), ); } } Firebase instance 생성 사용자 SignUp 기능 구현 본격적으로 사용자 등록기능을 구현해보겠습니다.\n우리가 만들었던 login_screen.dart에서 firebase_auth 패키지를 import하고 instance를 생성해주겠습니다.\n한번 생성이 되면 변하지 않을 것이기 때문에 final타입으로 지정해주겠습니다. 그리고 외부에서 접근할 수 없도록 프라이빗(_)으로 만들어주겠습니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 (lib \u0026gt; screens \u0026gt; login_screen.dart) import \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:firebase_auth/firebase_auth.dart\u0026#39;; class LoginScreen extends StatefulWidget { const LoginScreen({super.key}); @override State\u0026lt;LoginScreen\u0026gt; createState() =\u0026gt; _LoginScreenState(); } class _LoginScreenState extends State\u0026lt;LoginScreen\u0026gt; { final _authentication = FirebaseAuth.instance; String userPassword = \u0026#39;\u0026#39;; String userEmail = \u0026#39;\u0026#39;; ... 우리는 사용자의 등록과 인증기능에 사용할 _authentication이라는 instance를 생성했습니다!\n이 인스턴스로 우리는 이메일과 패스워드를 사용한 사용자 등록 메서드.createUserWithEmailAndPassword()이나 로그인을 할 수 있도록 만들어주는 메서드.signInWithEmailAndPassword()를 사용할 수 있습니다!\n먼저 로그인기능을 만들기 전에 사용자를 등록하는 메서드를 만들어보겠습니다.\n우리는 userEmail과 userPassword로 사용자의 이메일과 패스워드를 받아올 수 있었습니다.\n그렇기때문에 다음과 같이 버튼을 눌렀을 때 해당 값이 인자로 넘어가게끔 만들어주면 됩니다.\n1 2 3 4 5 6 7 8 9 10 11 (lib \u0026gt; screens \u0026gt; login_screen.dart) ... child: GestureDetector( onTap: () { _authentication.createUserWithEmailAndPassword( email: userEmail, password: userPassword, ); }, ... 예외처리를 생각한다면 다음과 같이 만들면 되겠죠?\n정상적으로 사용자 등록이 되고나면 ChatScreen() 으로 넘어가게끔 만들어줍시다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 (lib \u0026gt; screens \u0026gt; login_screen.dart) ... child: GestureDetector( onTap: () async { try { final newUser = await _authentication .createUserWithEmailAndPassword( email: userEmail, password: userPassword, ); if (newUser.user != null) { Navigator.push( context, MaterialPageRoute( builder: (context) { return const ChatScreen(); }, ), ); } } catch (e) { print(e); } }, ... 이 ChatScreen()에서 해당 사용자의 정보를 사용하려면 다음과 같이 instance를 생성해줘야합니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 (lib \u0026gt; screens \u0026gt; chat_screen.dart) import \u0026#39;package:firebase_auth/firebase_auth.dart\u0026#39;; import \u0026#39;package:flutter/material.dart\u0026#39;; class ChatScreen extends StatefulWidget { const ChatScreen({super.key}); @override State\u0026lt;ChatScreen\u0026gt; createState() =\u0026gt; _ChatScreenState(); } class _ChatScreenState extends State\u0026lt;ChatScreen\u0026gt; { final _authentication = FirebaseAuth.instance; User? loggedUser; @override void initState() { super.initState(); getCurrentUser(); } void getCurrentUser() { try { final currentUser = _authentication.currentUser; if (currentUser != null) { loggedUser = currentUser; print(loggedUser); } } catch (e) { print(e); } } @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text(\u0026#39;ChatScreen\u0026#39;), ), body: const Center( child: Text(\u0026#34;ChatScreen\u0026#34;), ), ); } } 이것도 마찬가지로 간단하게 예외처리를 하고 현재 로그인한 유저를 페이지가 로드되기 전에 데이터를 가져오게끔 만들기 위해 initalState()에 해당 함수를 불러오도록 하겠습니다\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 (lib \u0026gt; screens \u0026gt; chat_screen.dart) import \u0026#39;package:firebase_auth/firebase_auth.dart\u0026#39;; import \u0026#39;package:flutter/material.dart\u0026#39;; class ChatScreen extends StatefulWidget { const ChatScreen({super.key}); @override State\u0026lt;ChatScreen\u0026gt; createState() =\u0026gt; _ChatScreenState(); } class _ChatScreenState extends State\u0026lt;ChatScreen\u0026gt; { final _authentication = FirebaseAuth.instance; User? loggedUser; @override void initState() { super.initState(); getCurrentUser(); } void getCurrentUser() { try { final currentUser = _authentication.currentUser; if (currentUser != null) { loggedUser = currentUser; } } catch (e) { print(e); } } @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text(\u0026#39;ChatScreen\u0026#39;), ), body: Center( child: Text( loggedUser.toString(), ), ), ); } } 그러면 이제 등록을 위한 기능은 모두 마쳤습니다!\nAVD를 다시 시작해봅시다!\n사용자 SignIn 기능 구현 로그인 기능을 하려면 다음과 같이 만들면 됩니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 (lib \u0026gt; screens \u0026gt; login_screen.dart) ... child: GestureDetector( onTap: () async { try { final newUser = await _authentication.signInWithEmailAndPassword( email: userEmail, password: userPassword, ); if (newUser.user != null) { Navigator.push( context, MaterialPageRoute( builder: (context) { return const ChatScreen(); }, ), ); } } catch (e) { print(e); } }, ... Sdk version 에러 minSdkVersion 16 cannot be smaller than version 19 declared in library\n간혹 이런 에러가 뜨게되는데 이건 아래 글에서 해결하시면 되겠습니다.\nhttps://myeongcode.github.io/p/flutter-sdk-version-%EC%98%A4%EB%A5%98/\n계정 서버 생성 우리는 유저인증에 관련된 서버를 필요로하기때문에\n왼쪽 탭에서 빌드 \u0026gt; Authentication으로 이동해줍니다.\n시작하기를 눌러줍니다.\n다양한 기능이 있는데 우리는 이메일/비밀번호 로 기능을 만들어주겠습니다.\n여기서 이메일/비밀번호의 사용설정을 체크해주고 저장을 누릅니다.\n사용설정을 마쳤습니다!!\n그리고 User탭으로 한번 가보면 아직 사용자로 등록하지 않았으니 아무것도 뜨지 않을 겁니다.\n한번 눌러볼까요?\n^오^ 성공이네요\n참고자료 https://www.youtube.com/watch?v=se6wKk-w8lI\u0026list=PLQt_pzi-LLfoOpp3b-pnnLXgYpiFEftLB\u0026index=26\n","date":"2023-04-22T00:00:00Z","image":"https://myeongcode.github.io/p/flutter-flutter%EC%99%80-firebase-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0-android/flutter-logo_hud4db78cc4099f0118a23ad8c4eb3c315_171298_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/flutter-flutter%EC%99%80-firebase-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0-android/","title":"[Flutter] Flutter와 Firebase 연동하기 (Android)"},{"content":"에러 내용 cloud_firestore 패키지를 설치하고 AVD를 빌드 했을 때 발생한 오류\n에러 사진 원인 flutter에서 빌드 시, 특정 라이브러리가 minsdk버전을 충족하지 못하면 아래와 같은 에러가 발생하게 됩니다.\n해결방법 android \u0026gt; app \u0026gt; build.gradle을 보면 다음과 같이 되어있다\n1 2 3 4 5 6 7 defaultConfig { applicationId \u0026#34;com.example.firebase_login\u0026#34; minSdkVersion flutter.minSdkVersion targetSdkVersion flutter.targetSdkVersion versionCode flutterVersionCode.toInteger() versionName flutterVersionName } 여기에서 minSdkVersion을 21로 변경해준다.\n1 2 3 4 5 6 7 defaultConfig { applicationId \u0026#34;com.example.firebase_login\u0026#34; minSdkVersion 21 targetSdkVersion flutter.targetSdkVersion versionCode flutterVersionCode.toInteger() versionName flutterVersionName } 참고자료 https://stackoverflow.com/questions/71495205/uses-sdkminsdkversion-16-cannot-be-smaller-than-version-19-declared-in-library\n","date":"2023-04-22T00:00:00Z","image":"https://myeongcode.github.io/p/flutter-sdk-version-%EC%98%A4%EB%A5%98/flutter-logo_hud4db78cc4099f0118a23ad8c4eb3c315_171298_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/flutter-sdk-version-%EC%98%A4%EB%A5%98/","title":"[Flutter] sdk version 오류"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 /* [programmers / 나머지 구하기] 입출력 예 num1\tnum2\tresult 3\t2\t1 10\t5\t0 */ function solution(num1, num2) { let answer = num1 % num2; return answer; } 아 ㅋㅋ 너무 쉽다\n완료 ✅\n","date":"2023-04-22T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EB%82%98%EB%A8%B8%EC%A7%80-%EA%B5%AC%ED%95%98%EA%B8%B0-%EB%AC%B8%EC%A0%9C/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EB%82%98%EB%A8%B8%EC%A7%80-%EA%B5%AC%ED%95%98%EA%B8%B0-%EB%AC%B8%EC%A0%9C/","title":"[Programmers] 나머지 구하기 문제"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* [programmers / 중앙값 구하기] 입출력 예 array\tresult [1, 2, 7, 10, 11]\t7 [9, -1, 0]\t0 */ function solution(array) { let sort_array = array.sort((a, b) =\u0026gt; { if (a \u0026gt; b) return 1; if (a === b) return 0; if (a \u0026lt; b) return -1; }); let half_array = parseInt(sort_array.length / 2); let answer = sort_array[half_array]; return answer; } 그냥 sort로 정렬을 하게되면 유니코드 순서에 따라서 값을 정렬하게 되므로 만약, [1, 2, 7, 10, 11]을 sort() 하게되면 [1, 10, 11, 2, 7]로 정렬이 됩니다.\n그래서 우리는 파라미터를 사용해서 a, b 두 개의 파라미터를 입력받고 a \u0026gt; b이면 1을, a === b면 0을, a \u0026gt; b이면 -1을 리턴해서 숫자 크기대로 정렬하게 해주었습니다.\n완료 ✅\n","date":"2023-04-22T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EC%A4%91%EC%95%99%EA%B0%92-%EA%B5%AC%ED%95%98%EA%B8%B0-%EB%AC%B8%EC%A0%9C/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EC%A4%91%EC%95%99%EA%B0%92-%EA%B5%AC%ED%95%98%EA%B8%B0-%EB%AC%B8%EC%A0%9C/","title":"[Programmers] 중앙값 구하기 문제"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* [programmers / n이하의 홀수 구하기] 입출력 예 n\tresult 10\t[1, 3, 5, 7, 9] 15\t[1, 3, 5, 7, 9, 11, 13, 15] */ function solution(n) { let oddArray = []; for (let i = 1; i \u0026lt;= n; i++) { if (i % 2 !== 0) { oddArray.push(i); } } return oddArray; } 그냥 2로 나누어 떨어지지 않는 것을 oddArray로 push시켜주었습니다.\n완료 ✅\n","date":"2023-04-22T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EC%A7%9D%EC%88%98%EA%B0%80-%EC%8B%AB%EC%96%B4%EC%9A%94-%EB%AC%B8%EC%A0%9C/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EC%A7%9D%EC%88%98%EA%B0%80-%EC%8B%AB%EC%96%B4%EC%9A%94-%EB%AC%B8%EC%A0%9C/","title":"[Programmers] 짝수가 싫어요 문제"},{"content":"문제 풀이 음\u0026hellip;. 이걸 어떻게 코드로 표현할까 고민을 많이 하던 중 그냥 어떤 식으로 하면될지 그려봤습니다.\n나는 이런 방식으로 문제를 해결해볼려고 그랬지만, 이게 완전 최적의 코드라고는 장담을 못했습니다.\n아무튼 그래서 내가 작성한 코드는 다음과 같습니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 /* [programmers / 최빈값 구하기] 입출력 예 array\tresult [1, 2, 3, 3, 3, 4]\t3 [1, 1, 2, 2]\t-1 [1]\t1 */ function solution(array) { let arrayObject = []; let maxLength = 0; let maxNum = 0; for (var i = 0; i \u0026lt; array.length; i++) { if (arrayObject.find((e) =\u0026gt; e.name === array[i])) { arrayObject.find((e) =\u0026gt; e.name === array[i]).array.push(array[i]); } else { let newObject = { name: array[i], array: [array[i]] }; arrayObject.push(newObject); } } arrayObject.map((data, index) =\u0026gt; { if (maxLength \u0026lt; data.array.length) { maxLength = data.array.length; maxNum = data.name; } else if (maxLength === data.array.length) { maxNum = -1; } }); return maxNum; } arrayObject라는 객체를 만들고 인자로 받은 array를 for문으로 돌려 만약 저 객체에 1이라는 원소가 없으면 name은 해당 원소오 하고 array로 해당 원소가 얼만큼 있는지 배열로 나타내는 새로운 객체를 생성해서 arrayObject에 push를 해줬습니다.\n그리고 1이라는 원소가 있으면 해당 객체의 array의 key값에 해당 원소를 push해줘서 배열이 쌓일 수 있도록 만들었습니다.\n그리고는 만들어진 객체에서 비교를 진행합니다. maxLength와 maxNum을 만들고 map함수를 이용해서 새로운 객체의 배열값이 더 높을때만 maxLength와 maxNum을 업데이트해주고 만약 최빈값의 개수가 같은 객체가 있다면 바로 maxNum에 -1을 넣어주었습니다.\n그 결과 다음과 같이 결과를 얻을 수 있었습니다.\n완료 ✅\n","date":"2023-04-22T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EC%B5%9C%EB%B9%88%EA%B0%92-%EA%B5%AC%ED%95%98%EA%B8%B0-%EB%AC%B8%EC%A0%9C/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EC%B5%9C%EB%B9%88%EA%B0%92-%EA%B5%AC%ED%95%98%EA%B8%B0-%EB%AC%B8%EC%A0%9C/","title":"[Programmers] 최빈값 구하기 문제"},{"content":"에러 내용 Image.network로 주소에 있는 이미지를 불러오려고 했지만 다음과 같이 화면이 깨지고 이미지가 출력되지 않음\n1 2 3 4 5 6 7 8 9 10 (main.dart) ... return Column( children: [ Image.network(webtoon.thumb), Text(webtoon.title), ], ); ... 에러 사진 원인 따로 User-Agent 값을 추가하지 않으면 기본값으로 Dart/\\\u0026lt;version\u0026gt; (dart:io)가 들어갑니다.\n참고 : userAgent property\n그래서 이 값을 지우고 브라우저에서 사용하는 값으로 바꿔줍니다.\n해결방법 방법 1. headers에 useragent 추가\n1 2 3 4 5 6 ... child: Image.network( webtoon.thumb, headers: const {\u0026#34;User-Agent\u0026#34;: \u0026#34;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36\u0026#34;,}, ), ... 방법 2. main.dart에서 class 추가\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class MyHttpOverrides extends HttpOverrides { @override HttpClient createHttpClient(SecurityContext? context) { return super.createHttpClient(context) ..userAgent = \u0026#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36\u0026#39;; } } void main() { HttpOverrides.global = MyHttpOverrides(); runApp(const App()); } class App extends StatelessWidget { const App({Key? key}) : super(key: key); @override Widget build(BuildContext context) { return MaterialApp( home: HomeScreen(), ); } } 참고자료 https://gist.github.com/preinpost/941efd33dff90d9f8c7a208da40c18a9\n","date":"2023-04-21T00:00:00Z","image":"https://myeongcode.github.io/p/flutter-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%98%A4%EB%A5%98-1/flutter-logo_hud4db78cc4099f0118a23ad8c4eb3c315_171298_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/flutter-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%98%A4%EB%A5%98-1/","title":"[Flutter] 이미지 렌더링 오류 - 1"},{"content":"에러 내용 Image.asset을 이용해서 파일 경로로 이미지를 불러왔을 때 발생한 오류\n1 2 3 4 5 6 7 8 9 (main.dart) ... Image.asset( \u0026#39;images/google-logo.png\u0026#39;, width: 70, fit: BoxFit.fill, ), ... 에러 사진 원인 pubspec.yaml에 assets를 추가해주지 않아 발생하게 된 것\n해결방법 pubspec.yaml 파일에 flutter \u0026gt; assets \u0026gt; images/ 라고 추가해줘야 이미지를 불러올 수 있게 됩니다.\n즉, 사용할 assets의 경로를 설정해줘야합니다.\n참고자료 https://security-nanglam.tistory.com/479\n","date":"2023-04-21T00:00:00Z","image":"https://myeongcode.github.io/p/flutter-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%98%A4%EB%A5%98-2/flutter-logo_hud4db78cc4099f0118a23ad8c4eb3c315_171298_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/flutter-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%98%A4%EB%A5%98-2/","title":"[Flutter] 이미지 렌더링 오류 - 2"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* [baekjoon / 10699] 오늘 날짜 출력 */ var date = new Date(); let year = date.getFullYear().toString(); let month = (date.getMonth() + 1).toString(); let day = date.getDate().toString(); solution(year, month.padStart(2, \u0026#34;0\u0026#34;), day.padStart(2, \u0026#34;0\u0026#34;)); function solution(param1, param2, param3) { var today = `${param1}-${param2}-${param3}`; console.log(today); } 완료 ✅\n","date":"2023-04-20T00:00:00Z","image":"https://myeongcode.github.io/p/baekjoon-10699%EB%B2%88-%EB%AC%B8%EC%A0%9C/baekjoon_hu42505e151a7615c4e98d9937cdff0e57_83678_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/baekjoon-10699%EB%B2%88-%EB%AC%B8%EC%A0%9C/","title":"[Baekjoon] 10699번 문제"},{"content":"문제 풀이 그냥 머리로 분수 덧셈하는건 해봤는데 이 공식을 코드로 직접 적어본다고 생각하니 조금 어려웠다.. 초등학교 문제인데..\n적잖은 충격을 먹고나서 분수의 덧셈 공식을 다시 검색해봤다\n그렇다 통분을 하고 기약분수로 나타내면 되었다고 생각했다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /* [programmers / 분수의 덧셈] 입출력 예 numer1 denom1\tnumer2\tdenom2\tresult 1\t2\t3\t4\t[5, 4] 9\t2\t1\t3\t[29, 6] */ function calculation(numer1, denom1, numer2, denom2) { //최대로 약분할 수 있는 숫자 let max = 1; let numer = numer1 * denom2 + numer2 * denom1; let denom = denom1 * denom2; for (let i = 1; i \u0026lt; numer; i++) { if (denom % i === 0 \u0026amp;\u0026amp; numer % i === 0) { max = i; } } return [numer / max, denom / max]; } function solution(numer1, denom1, numer2, denom2) { var answer = calculation(numer1, denom1, numer2, denom2); return answer; } 음?\u0026hellip;. 중간에 실패한 테스트 케이스가 있었다.\n한가지 알아본 테스트 중 입력이 1, 2, 1, 2가 들어가게 되면 [1, 1]로 되어야하는데 [2, 2]로까지밖에 약분이 안되어있었다.\nfor문을 다시 확인해보니 i \u0026lt;= numer까지의 범위를 해줬어야했는데 i \u0026lt; numer까지 밖에 안한 것.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /* [programmers / 분수의 덧셈] 입출력 예 numer1 denom1\tnumer2\tdenom2\tresult 1\t2\t3\t4\t[5, 4] 9\t2\t1\t3\t[29, 6] */ function calculation(numer1, denom1, numer2, denom2) { //최대로 약분할 수 있는 숫자 let max = 1; let numer = numer1 * denom2 + numer2 * denom1; let denom = denom1 * denom2; for (let i = 1; i \u0026lt;= numer; i++) { if (denom % i === 0 \u0026amp;\u0026amp; numer % i === 0) { max = i; } } return [numer / max, denom / max]; } function solution(numer1, denom1, numer2, denom2) { var answer = calculation(numer1, denom1, numer2, denom2); return answer; } 완료 ✅\n","date":"2023-04-20T00:00:00Z","image":"https://myeongcode.github.io/p/programmers-%EB%B6%84%EC%88%98%EC%9D%98-%EB%8D%A7%EC%85%88-%EB%AC%B8%EC%A0%9C/program-logo_hud53099fb9da63a7d59936d9937850c96_17100_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/programmers-%EB%B6%84%EC%88%98%EC%9D%98-%EB%8D%A7%EC%85%88-%EB%AC%B8%EC%A0%9C/","title":"[Programmers] 분수의 덧셈 문제"},{"content":"문제 풀이 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* [baekjoon / 10757] 9223372036854775807 9223372036854775808 */ const fs = require(\u0026#34;fs\u0026#34;); let input = fs.readFileSync(\u0026#34;./input.txt\u0026#34;).toString(); let result = input.split(\u0026#34; \u0026#34;).filter((num) =\u0026gt; num !== \u0026#34;\u0026#34;); let num1 = parseInt(result[0]); let num2 = parseInt(result[1]); solution(num1, num2); function solution(param1, param2) { console.log(param1 + param2); } 처음엔 쉽게 정답이 될 줄 알았다..\n근데 자꾸 이상한 답이 나오더라?\n음?\u0026hellip;. 뭐야 분명 18446744073709551615이란 값이 나와야하는데 계속 18446744073709552000이 나옴\n아ㅋㅋ\n결국 한개씩 출력해봄 입력도 이상하게 나오는지\n음? ㅋㅋ 이건 또 뭐임\n찾아보니 Javascript에는 BigInt라는 새로운 데이터형이 존재한다는 것을 알았다. BigInt는 Javascript Number의 최대범위인 2^53 - 1보다 큰 정수를 표현할 수 있다고 한다.\nJavascript BigInt\n그래서 parseInt()대신 BigInt()로 바꿔서 출력해봤다.\n1 2 3 4 ... let num1 = BigInt(result[0]); let num2 = BigInt(result[1]); ... 드디어 숫자가 변하지 않고 정확하게 출력되는 것을 볼 수 있다. 근데, 뒤에 n이라는 문자가 같이 표기되어 나온다?\n이건 .toString() 메소드를 쓰면 해결되었다.\n^오^\n다시 두 수의 덧셈을 구하여 출력해보는 걸로 하고, 백준의 입력을 받을 수 있게끔 읽는 파일을 \u0026quot;/dev/stdin\u0026quot;으로 바꿔주자\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /* [baekjoon / 10757] 9223372036854775807 9223372036854775808 */ const fs = require(\u0026#34;fs\u0026#34;); let input = fs.readFileSync(\u0026#34;/dev/stdin\u0026#34;).toString(); let result = input.split(\u0026#34; \u0026#34;).filter((num) =\u0026gt; num !== \u0026#34;\u0026#34;); let num1 = BigInt(result[0]); let num2 = BigInt(result[1]); solution(num1, num2); function solution(param1, param2) { let result = param1 + param2; console.log(result.toString()); } 해결완료 ✅\n","date":"2023-04-19T00:00:00Z","image":"https://myeongcode.github.io/p/baekjoon-10757%EB%B2%88-%EB%AC%B8%EC%A0%9C/baekjoon_hu42505e151a7615c4e98d9937cdff0e57_83678_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/baekjoon-10757%EB%B2%88-%EB%AC%B8%EC%A0%9C/","title":"[Baekjoon] 10757번 문제"},{"content":"Scaffold란? Flutter에서 Scaffold는 Material Design에서 사용되는 앱의 뼈대(Layout)을 제공하는 위젯입니다.\nScaffold class\n역할 Scaffold는 앱의 기본적인 레이아웃 구조를 정의하고, appbar, toolbar, drawer, tapbar 등과 같은 Material Design 구성요소를 구현합니다.\nScaffold는 일반적으로 MaterialApp위젯 내애서 사용되며, 앱의 뼈대를 제공하고, 많은 Material Design 구성요소를 간단하게 구현할 수 있기 때문에, Flutter앱을 개발할 때 매우 유용한 위젯 중 하나입니다.\nScaffold 위젯은 body속성을 통해 앱의 기본 컨텐츠를 정의하며, appBar속성을 통해 상단의 앱 바를 정의할 수 있습니다.\n또한, drawer속성을 사용하여 측면 드로어를 추가하거나 bottomNavigationBar속성을 사용하여 하단의 탭바를 추가할 수도 있습니다.\nparameter Scaffold의 parameter는 다양하지만, 우리는 가장 범용적으로 사용하는 기능에 대해 다룰 것입니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class Scaffold extends StatefulWidget { const Scaffold({ super.key, this.appBar, this.body, this.floatingActionButton, this.floatingActionButtonLocation, this.floatingActionButtonAnimator, this.persistentFooterButtons, this.persistentFooterAlignment = AlignmentDirectional.centerEnd, this.drawer, this.onDrawerChanged, this.endDrawer, this.onEndDrawerChanged, this.bottomNavigationBar, this.bottomSheet, this.backgroundColor, this.resizeToAvoidBottomInset, this.primary = true, this.drawerDragStartBehavior = DragStartBehavior.start, this.extendBody = false, this.extendBodyBehindAppBar = false, this.drawerScrimColor, this.drawerEdgeDragWidth, this.drawerEnableOpenDragGesture = true, this.endDrawerEnableOpenDragGesture = true, this.restorationId, }) Appbar Application 최상단에 위치하고 있는 bar를 말합니다. 아래와 같이 Scaffold생성자에 AppBar를 전달하면 생성할 수 있습니다.\n자세한 내용은 Appbar Class를 확인하세요\n1 2 3 4 5 6 7 8 9 10 11 12 13 class HomeScreen extends StatelessWidget { const HomeScreen({super.key}); @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text(\u0026#39;HomeScreen\u0026#39;), //타이틀 제목 centerTitle: true, //타이틀 가운데 정렬 (true/false) ), ); } } backgroundColor / foregroundColor 상단바의 배경색(backgroundColor) / 타이틀색(foregroundColor)를 지정할 때\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 class HomeScreen extends StatelessWidget { const HomeScreen({super.key}); @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text(\u0026#39;HomeScreen\u0026#39;), backgroundColor: Colors.green, //상단바 배경색 foregroundColor: Colors.black, //상단바 타이틀색 ), ); } } elevation / shadowColor 상단바에 그림자효과를 줄 때\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 class HomeScreen extends StatelessWidget { const HomeScreen({super.key}); @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text(\u0026#39;HomeScreen\u0026#39;), elevation: 10, //상단바 Shadow 깊이 shadowColor: Colors.red, //상단바 Shadow 색 ), ); } } leading / actions 상단바에 앞(leading)/뒤(actions)에 아이콘과 같은 위젯들을 추가하고 버튼 아이콘으로 onPressed도 실행할 수 있음\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class HomeScreen extends StatelessWidget { const HomeScreen({super.key}); @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text(\u0026#39;HomeScreen\u0026#39;), leading: const Icon(Icons.ac_unit), //상단바 타이틀 앞에 위젯추가 actions: [ //상단바 타이틀 뒤에 위젯추가 IconButton( icon: const Icon(Icons.photo_album), tooltip: \u0026#39;Hi!\u0026#39;, onPressed: () =\u0026gt; {}, ), IconButton( icon: const Icon(Icons.pie_chart), tooltip: \u0026#39;Wow\u0026#39;, onPressed: () =\u0026gt; {}, ) ], automaticallyImplyLeading: true, //뒤로가기 버튼 true(존재O)/false(존재X) centerTitle: true, //타이틀 가운데 정렬 ), ); } } Body Appbar의 중간영역이며, body는 하나의 Widget만 가질 수 있으며 메인 화면에 보여질 내용을 주로 작성합니다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class HomeScreen extends StatelessWidget { const HomeScreen({super.key}); @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text(\u0026#39;HomeScreen\u0026#39;), ), body: Center( child: Column( children: const [ Text(\u0026#39;1\u0026#39;), Text(\u0026#39;2\u0026#39;), Text(\u0026#39;3\u0026#39;), Text(\u0026#39;4\u0026#39;), Text(\u0026#39;5\u0026#39;), Text(\u0026#39;6\u0026#39;), ], ), ), ); } } Bottom Navigation Bar 앱 하단에 다른 뷰를 볼 수 있도록 메뉴바를 표시해주는 위젯입니다. 보통 페이지 별 바로가기 작업을 제공하기위해 만들어집니다.\n자세한 내용은 BottonNavigationBar Class를 확인하세요\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class HomeScreen extends StatelessWidget { const HomeScreen({super.key}); @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text(\u0026#39;HomeScreen\u0026#39;), ), bottomNavigationBar: BottomNavigationBar( items: const \u0026lt;BottomNavigationBarItem\u0026gt;[ BottomNavigationBarItem( icon: Icon(Icons.text_snippet), label: \u0026#39;나의 판매글\u0026#39;, ), BottomNavigationBarItem( icon: Icon(Icons.home), label: \u0026#39;홈\u0026#39;, ), BottomNavigationBarItem( icon: Icon(Icons.people), label: \u0026#39;마이페이지\u0026#39;, ), ], selectedItemColor: Colors.lightGreen, ), ); } } Floating Action Button 화면에 Fixed되는 원형 아이콘 버튼이며 일반적으로 화면 맨 하단 오른쪽에 위치하게 됩니다. Android 개발자들은 줄여서 FAB라고 부른다고 합니다. Icon뿐만아니라 Text로도 위젯을 사용할 수 있습니다.\n자세한 내용은 FloationActionButton Class를 확인하세요\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class HomeScreen extends StatelessWidget { const HomeScreen({super.key}); @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: const Text(\u0026#39;HomeScreen\u0026#39;), ), floatingActionButton: FloatingActionButton.extended( label: const Text(\u0026#39;Approve\u0026#39;), icon: const Icon(Icons.thumb_up), backgroundColor: Colors.pink, onPressed: () =\u0026gt; {print(\u0026#39;hello\u0026#39;)}, ), ); } } ","date":"2023-04-18T00:00:00Z","image":"https://myeongcode.github.io/p/flutter-scaffold-widget/flutter-logo_hud4db78cc4099f0118a23ad8c4eb3c315_171298_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/flutter-scaffold-widget/","title":"[Flutter] Scaffold Widget"},{"content":"Dart란? Dart는 구글이 디자인한 멀티 플랫폼 프로그래밍언어입니다.\n자바스크립트를 대체할 수 있는 크로스 플랫폼 프로그래밍 언어를 목표로 설계했다고 합니다.\nDart는 Flutter에서 사용되는 언어이며 모든 플랫폼에서 빠른 앱을 위한 클라이언트 최적화 언어입니다.\nUI 최적화용 : 사용자 인터페이스 생성 요구에 특화된 프로그래밍 언어로 개발\n생산적인 개발 : 핫 리로드를 사용하여 실행 중인 앱에서 즉시 결과 확인\n모든 플랫폼에서 빠름 : 모바일, 데스크톱 및 백엔드용 ARM 및 x64 머신 코드로 컴파일합니다. 또는 웹용 JavaScript로 컴파일\nDart 공식 사이트\n사이트에 본 설명에 의하면 Dart는 두 개의 컴파일러를 가지고 있다.\nDart Web : Dart로 쓴 코드를 javascript로 변환해주는 컴파일러 Dart Native : Dart로 쓴 코드를 여러 CPU의 아키텍쳐에 맞게 변환해주는 컴파일러 (ARM32, 모바일인 ARM64(IOS, Android), 데스크탑인 x86_64(Mac, Linux, Windows) 등등에 맞게 변환해준다는 의미) JIT, AOT Dart는 또 어떻게 컴파일 되는지에 대해 JIT, AOT로 볼 수 있다.\nJIT(Just-In-Time) : 개발 중에는 수정된 코드가 결과로 바로 나타날 수 있게끔 만드는 컴파일러로 Dart VM(Virtual Machine)을 사용하여 Just-In-Time 컴파일러를 제공합니다. AOT(Ahead-of-time) : 배포를 할 때에는 더이상 Dart VM(Virtual Machine)을 사용하지 않고 Ahead-Of-Time 컴파일러를 제공하여 각 아키텍쳐에 맞는 기계어로 컴파일이 되고 앱을 더 빠르게 실행시킬 수 있게 만듭니다. 이러한 특징을 갖는 것은 모바일 개발에 있어서 아주 중요하고 멋진 특징입니다. 개발 중에 바로바로 피드백을 확인할 수 있고, 앱을 배포할 때에는 휴대폰, 노트북, 웹사이트에서 기계어를 실행하여 편하게 배포를 할 수 있습니다.\nnull safety 다른 언어에서는 코드에서 null 값을 참조해버리면 오류가 발생하여 더 이상 동작을 할 수 없게 만들지만, Dart는 이러한 문제를 방지하기 위해 null safety라는 것을 도입했습니다.\n결론 Flutter는 Dart라는 언어를 사용하는데 둘 다 구글에서 제작한 것이므로 Dart는 Flutter를 위한 언어라고 볼 수 있습니다. 그래서 Flutter에서의 Dart언어를 최적화하고싶다면 수정을 할 수 있다는 큰 장점이 있습니다.\n이것이 중요한 이유는 React나 Vue는 언어에 대해 최적화를 하고싶다고 하여도 javascript를 수정할 수 없습니다. 다른 언어들도 마찬가지입니다. 그렇기때문에 이 점은 매우 강한 장점으로 보이며 그 속에 또 다른 단점이 존재할 수 있습니다. 하지만, RN에 비해 Flutter의 사용비율이 급격히 증가해지면서 커뮤니티가 활성화되고있고 더 많은 기능을 기대할 수 있을 것 같습니다.\nFlutter에 관심이 많다면 한번 배워보는 것도 좋을 것 같습니다.\n","date":"2023-04-17T00:00:00Z","image":"https://myeongcode.github.io/p/dart-flutter%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-dart%EC%96%B8%EC%96%B4%EB%9E%80/dart-logo_hu6ca51b6ea6e3939baa7b81d018f1cfc2_224667_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/dart-flutter%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-dart%EC%96%B8%EC%96%B4%EB%9E%80/","title":"[Dart] Flutter에서 사용하는 Dart언어란?"},{"content":"Flutter란? Flutter는 Google에서 개발한 크로스 플랫폼 모바일 앱 개발 프레임워크\n크로스 플랫폼 모바일 앱 개발 프레임워크란?\niOS나 Android 두 OS에 대해 하나의 코드베이스로 관리하여 여러 플랫폼에 동시에 서비스를 제공하기 위한 프레임워크\nNative vs Cross Platform vs Hybrid 앱 서비스 개발시 3가지 방법으로 서비스를 제공할 수 있습니다.\n네이티브 앱 크로스 플랫폼 프레임워크 하이브리드 앱 네이티브 앱 네이티브 앱은 플랫폼의 네이티브 언어와 프레임워크를 이용해 개발하며 기기에 맞게 어플리케이션을 개발할 수 있지만, 여러 플랫폼에서 제공하기 위해서는 각각 개발을 할 수 있어야함\n크로스 플랫폼 프레임워크 크로스 플랫폼 프레임워크는 하나의 코드베이스로 여러 플랫폼을 관리 및 서비스할 수 있으며 자바스크립트, C#, Dart를 안다면 개발을 시작할 수 있음\n하이브리드 앱 하이브리드 앱은 웹페이지를 웹뷰로 감싸서 플랫폼처럼 서비스를 제공할 수 있으며 웹개발로 앱도 동시에 개발할 수 있고, 앱과 같은 경험을 만들어 줄 수 있음\n자세한 내용은 추후에 더 포스팅을 하여 각 방법의 특장점을 살펴보도록 하겠습니다.\n그렇다면 왜 Flutter는 CrossPlatform을 사용할까요? 모바일의 경우 iOS와 Android 개발자가 각각 있다면 CrossPlatform으로 개발하지 않아도 됩니다. 하지만, 각 OS별로 유저들에게 동일한 UI/UX를 제공하면서 개발하는 것은 결코 쉬운일이 아닙니다. 또, 각 OS별로 개발자가 필요하다보니 개발자원이 2배 이상 필요하게 됩니다. 그리고, 한명의 개발자가 두 OS 모두 개발한다고 하더라도 각 OS의 개발방식이 서로 다르기때문에 시간도 많이 소요됩니다.\n개발을 완료했다쳐도 각 OS마다 앱의 유지보수가 쉽지 않다는 단점이 있습니다.\n그래서 크로스 플랫폼을 사용한다면 개발 자원과 시간을 줄일 수 있으며, 하나의 프레임워크로 Android, iOS 둘 다 동시에 개발이 가능해집니다. 유지보수 측면에서도 하나의 코드베이스로 되어있다보니 훨씬 편리하게됩니다.\n기존의 앱 시장에서는 React Native가 시장을 장악하고 있었지만, Flutter가 나온 후로 많은 개발자들이 유입되었고 커뮤니티또한 활발하게 성장하고 있습니다.\n2023년 2월 기준으로 Stack Overflow Survey 2022에서 나온 결과를 보면 Flutter가 간소한 차이로 우위를 하고 있는 것을 볼 수 있습니다.\nThe results of the annual Stack Overflow Survey 2022\n또 아래에는 React Native와 Flutter의 비교영상입니다.\nhttps://www.youtube.com/watch?v=BqGxJ_ybE6k\nFlutter는 어떤 언어를 사용하나요? Flutter는 Dart라는 언어를 사용합니다. 이 Dart언어 또한 구글에서 개발한 언어입니다.\n기존의 앱 개발자들에게는 또 다시 언어를 배워야한다는 단점이 있지만, 문법자체가 그렇게 어렵진 않은 것 같아 어느정도 개발을 하셨던 분들이라면 빠르게 적응하실 수 있을 것입니다.\nDart에 대하여 더 궁금한 내용은 Flutter에서 사용하는 Dart언어란?을 봐주세요.\nFlutter의 특징 장점\n통합 개발 환경지원\nFlutter는 다양한 Editor(Android Studio, VS Code 등등)를 사용하여 빌드가 가능합니다. Android Studio는 Flutter Inspector와 Flutter Outline이라는 개발 도구를 추가적으로 지원해줍니다. VS code 에서는 간단하게 Extension 으로 Flutter를 설치하여 Flutter를 사용할 수 있습니다.\n성능 문제해결\n기존 React Native 혹은 Hybrid App의 경우 네이티브 브릿지를 통한 통신이 불가피했습니다.\n하지만 Flutter는 직접 컴파일되서 Render를 직접 하기때문에 성능이 빠릅니다. 애니메이션 속도가 60프레임은 가뿐히 넘어서는 것이 기존 크로스 플랫폼시장의 주류였던 React Native와 Flutter를 비교하는 많은 글들에서 Flutter를 내세우는 부분입니다.\nMateiral Design \u0026amp; Cupertino\nFlutter는 Androd와 iOS의 대표 디자인 가이드를 기본적으로 제공합니다. 구글의 머티리얼 디자인(Material Design)의 홈페이지에는 이미 Flutter가 포함되어 있고 가이드만 제공하는 것 뿐만아니라 Flutter 프로젝트에 바로 추가하여 사용할 수 있는 패키지도 제공합니다.\n안드로이드와 iOS에서 같은 머티리얼 디자인을 사용하더라도 플랫폼에 따라 다르게 출력되는 부분을 각각 디자인 가이드에 맞게 화면을 그립니다. iOS앱을 개발하는 경우 iOS특유의 디자인 시스템인 쿠퍼티노(Cupertino) 위젯을 제공합니다.\n그렇기에 선택의 폭이 정해져 있기 때문에 어떤 UI 라이브러리를 사용할 것인지 고민 할 필요가 없습니다만 이건 장점이자 단점이 될수도 있습니다.\nDart뿐만 아니라 Native코드도 사용\n앞서 Dart를 사용한다고 했지만 결국엔 크로스 플랫폼이기에 해당 OS에 최적화된 앱을 만들려면 Native 코드를 사용할수밖에 없고 Dart와 섞어서 사용을 합니다. 즉, Dart만 사용하는것이 아니라 Android면 Kotlin, iOS면 Swift도 사용합니다. 이는 기존의 Native 코드를 사용한 개발자라면 장점이 됩니다.\n단점\nNative API를 Dart에서 직접 호출 불가\n특별히 심하게 문제가 되진 않지만 외부 플러그인을 써야합니다.\n코드를 고치려면 새 버전을 배포\nReact Native, Cordova, Ionic 에선 이미 지원 중 입니다.\nhttps://github.com/flutter/flutter/issues/14330\nAir bnb Lotti 지원 X\nFlutter는 지원하지 않습니다. Android, iOS, React-Native만 지원\nLotti는 어플리케이션에 Fancy한 애니메이션을 넣어주는 라이브러리입니다.\nhttps://airbnb.design/lottie/\nWearable 디바이스앱에 약함\n플러그인이 존재는 하지만 Native처럼 쉽게 되지는 않습니다.\nC/C++ 라이브러리 호출 불가\nNDK C/C++ 라이브러리 호출이 Dart에서 안됩니다. 외부 플러그인을 써야하고, 원하는 플러그인이 없다면 만들어야 하는데 이는 보통일이 아닙니다.\n지원되는 플러그인이 부족\n아직 플러그인들은 부족한 편입니다. 어플을 생성할 때, Webview, Map 등 플러그인은 필요합니다.\n하지만 Flutter의 이러한 플러그인들은 전부 0.4, 0.3 등등 1.0을 넘는 버전을 보기가 힘듭니다. 따라서 지속적으로 업데이트가 되고있고, 업데이트가 될때마다 다시 붙이고 테스트해보는 것은 어마어마하게 번거로운 일이 될 것입니다.\n아직까진 국내에 개발관련 자료가 많이 없음\nndroid, iOS Native는 나온지 오래되서 자료가 많다보니 문제해결이 쉽습니다만, 국내엔 아직까진 자료가 많다고 할수가 없어 이슈 상황 발생시 자료 찾기가 어렵습니다.\n또한, Flutter 개발자들도 그렇게 많은 편이 아니기에 도움을 구하기도 어느정도 힘이 듭니다.\n결론 점점 성장 중이며 React Native보다 사용을 많이한다고는 하지만, 아직 플러그인이 부족한 것은 사실이며 소규모로 빠르게 시작하기 위해서는 Flutter를 사용하는게 맞겠지만, 어느정도 규모가 있다면 각각의 OS에 맞는 전문 개발자를 뽑아서 개발하는 것이 질적으로 더 가치가 있을 것 같습니다.\n아직 국내에 많은 레퍼런스가 없긴 하지만 학생으로서 Flutter로 빠르게 서비스를 제공하는 경험을 해보는 것도 괜찮을 것 같습니다. 기본적으로 괜찮은 기능들이 많고 React Native에서 힘들게 작업해야 하는 것을 Flutter에서는 손쉽게 구현하는 것도 코린이로서 이점이 될 수도 있습니다.\nFlutter도 외국에 생각보다 많은 서비스를 하고있으며 지속적으로 업데이트되고 더 안정화가 된다면 강력한 프레임워크가 되지 않을까 생각합니다.\n참고자료 https://blog.mayleaf.dev/24\nhttps://velog.io/@jojo_devstory/Flutter%EB%9E%80-Flutter%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90#4-flutter%EC%9D%98-%ED%8A%B9%EC%A7%95\n","date":"2023-04-17T00:00:00Z","image":"https://myeongcode.github.io/p/flutter-flutter%EB%9E%80-flutter%EA%B0%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C/flutter-logo_hud4db78cc4099f0118a23ad8c4eb3c315_171298_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/flutter-flutter%EB%9E%80-flutter%EA%B0%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C/","title":"[Flutter] Flutter란? Flutter가 무엇일까?"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating. — Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-04-16T00:00:00Z","image":"https://myeongcode.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://myeongcode.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"반가워요! 앞으로 다시 포스팅 열심히하기 ✍🏻\n","date":"2023-04-16T00:00:00Z","permalink":"https://myeongcode.github.io/p/%ED%99%88%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%83%88-%EB%8B%A8%EC%9E%A5/","title":"홈페이지 새 단장"},{"content":"문제 풀이 (처음 생각한 답)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 #define _CRT_SECURE_NO_WARNINGS #include \u0026lt;stdio.h\u0026gt; int main(void) { float a, b, result; scanf(\u0026#34;%f %f\u0026#34;, \u0026amp;a, \u0026amp;b); result = a / b; printf(\u0026#34;%.10f\u0026#34;, result); return 0; } 하지만, 위의 문제에서 출력부분을 보면 ‘실제 정답과 출력값의 절대오차 또는 상대오차가 $10^{-9}$이하이면 정답’ 이라고 표시되어 있다.\n이게 무슨말이냐?\n먼저 float으로 받아서 float으로 출력을 해보면 다음과 같이 나옵니다.\n실제 답은 0.333333333333…이 나와야하는데 0.3333333433이 출력이 됩니다.\n그러면 실제 답과의 절대오차는 0.0000000100…이 됩니다.\n절대오차가 1 * 10^{-8}만큼 차이나므로 10^{-9}이하가 아니게 됩니다\n1 * 10^{-8} \u0026gt; 10^{-9}\n그러면 상대오차로 계산해보겠습니다.\n상대오차는 배율로 생각하면 편합니다. 원래 답과의 차이가 +-10까지 허용한다 그러면 상대오차는 10^{-1}까지 허용하는 셈입니다. +-1까지 허용한다하면 10^{-2}까지 허용하는겁니다.\n그렇다면, 0.3333333333과 0.3333333433의 상대오차는 어떻게 될까요\n공식을 이용하면\n상대오차 = {1*10^{-8}}{0.3333333333} * 100 = 0.000003\n배율만큼 차이가 난다는 의미입니다. 그러므로 상대오차 또한 10^{-9}보다 크므로 상대오차도 오답이 되는 것입니다.\n그러면 어떻게 해야하냐면 정밀도가 더 큰 자료형으로 바꾸면 됩니다.\nfloat보다는 double의 정밀도가 더 큽니다.\nfloat과 double의 범위또한 다르며 유효자릿수가 double이 더 크기때문에 더 정밀하다는 의미가 됩니다.\n따라서, 백준에서는 더 정밀한 값을 정답으로 처리하겠다는 것입니다.\n그럼 자료형을 float이 아닌 double로 바꿔서 출력해보겠습니다\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #define _CRT_SECURE_NO_WARNINGS #include \u0026lt;stdio.h\u0026gt; int main(void) { double a, b, result; printf(\u0026#34;-------input-------\\n\u0026#34;); scanf(\u0026#34;%lf %lf\u0026#34;, \u0026amp;a, \u0026amp;b); printf(\u0026#34;\\n\u0026#34;); result = a / b; printf(\u0026#34;-------output-------\\n\u0026#34;); printf(\u0026#34;%.10lf\\n\u0026#34;, result); return 0; } ","date":"2022-10-26T00:00:00Z","image":"https://myeongcode.github.io/p/baekjoon-1008%EB%B2%88-%EB%AC%B8%EC%A0%9C/baekjoon_hu42505e151a7615c4e98d9937cdff0e57_83678_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/baekjoon-1008%EB%B2%88-%EB%AC%B8%EC%A0%9C/","title":"[Baekjoon] 1008번 문제"},{"content":"문제 풀이 이 문제는 C언어로 풀어봤지만, C언어에서 정수형의 표현 범위는 long을 이용해도 2,147,483,647정도로 10의 1000승에 비하면 터무니없이 작은 수이기 때문에 계산할 수 있는 범위를 벗어나서 오버플로우가 발생했고, 출력값이 잘못 나오게 되는겁니다.\n따라서, 이 문제는 C가 아닌 파이썬을 이용하면 훨씬 더 쉽게 풀 수 있다는 것을 알았습니다.\n왜냐하면 파이썬은 큰 수를 자동으로 처리해주기 때문이죠.\n1 2 3 4 m, n = map(int, input().split()) print(m // n) print(m % n) ","date":"2022-10-26T00:00:00Z","image":"https://myeongcode.github.io/p/baekjoon-1271%EB%B2%88-%EB%AC%B8%EC%A0%9C/baekjoon_hu42505e151a7615c4e98d9937cdff0e57_83678_120x120_fill_box_smart1_3.png","permalink":"https://myeongcode.github.io/p/baekjoon-1271%EB%B2%88-%EB%AC%B8%EC%A0%9C/","title":"[Baekjoon] 1271번 문제"}]